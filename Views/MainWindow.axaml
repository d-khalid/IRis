<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:IRis.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="IRis.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="IRis">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <Window.KeyBindings>
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="A" Command="{Binding AddComponentCommand}" CommandParameter="AND"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="X" Command="{Binding AddComponentCommand}" CommandParameter="XOR"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="N" Command="{Binding AddComponentCommand}" CommandParameter="NOT"/>
        
        <KeyBinding Gesture="O" Command="{Binding AddComponentCommand}" CommandParameter="OR"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="E" Command="{Binding AddComponentCommand}" CommandParameter="NAND"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="Q" Command="{Binding AddComponentCommand}" CommandParameter="NOR"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="W" Command="{Binding AddComponentCommand}" CommandParameter="XNOR"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="P" Command="{Binding AddComponentCommand}" CommandParameter="PROBE"/>
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="T" Command="{Binding AddComponentCommand}" CommandParameter="TOGGLE"/>
        
        <KeyBinding Gesture="I" Command="{Binding AddComponentCommand}" CommandParameter="WIRE"/>

        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="Delete" Command="{Binding DeleteCommand}" />
        
        
        <!-- Bind Enter key to a command -->
        <KeyBinding Gesture="Z" Command="{Binding AddComponentCommand}" CommandParameter="NULL"/>
        <KeyBinding Gesture="Escape" Command="{Binding AddComponentCommand}" CommandParameter="NULL"/>


        
        <!-- ACTUAL SHORTCUTS, KEEP-->
        <!-- Bind Ctrl+S to SaveCommand -->
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveCommand}"/>

        <!-- Bind Ctrl+c to CopyCommand-->
        <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyCommand}"/>
        
        <!-- Bind Ctrl+X to CutCommand -->
        <KeyBinding Gesture="Ctrl+X" Command="{Binding CutCommand}"/>

        <!-- Bind Ctrl+V to PasteCommand -->
        <KeyBinding Gesture="Ctrl+V" Command="{Binding PasteCommand}"/>

        <!-- Bind Ctrl+Z to UndoCommand -->
        <KeyBinding Gesture="Ctrl+Z" Command="{Binding UndoCommand}"/>

        <!-- Bind Ctrl+Y to RedoCommand -->
        <KeyBinding Gesture="Ctrl+Y" Command="{Binding RedoCommand}"/>

        <!-- Bind Ctrl+O to OpenCommand -->
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenCommand}"/>

        <!-- Bind Ctrl+N to NewCommand -->
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewCommand}"/>

       

       
    </Window.KeyBindings>

 
  <DockPanel>
        <!-- Top Menu Bar -->
        <Menu DockPanel.Dock="Top" >
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{Binding NewCommand}"/>
                <MenuItem Header="Open..." Command="{Binding OpenCommand}"/>
                <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
                <!-- <MenuItem Header="Save As..." Command="{Binding SaveAsCommand}"/> -->
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <!-- <MenuItem Header="Undo" Command="{Binding UndoCommand}"/> -->
                <!-- <MenuItem Header="Redo" Command="{Binding RedoCommand}"/> -->
                <Separator/>
                <MenuItem Header="Cut" Command="{Binding CutCommand}"/>
                <MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
                <MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
                <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
            </MenuItem>
            <!-- AI option -->
            <MenuItem Header="AI">
                <MenuItem Header="Generate From Prompt" Command="{Binding AiPromptCommand}"/>
                <MenuItem Header="Generate From Image" Command="{Binding AiImageCommand}"/>

            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Left Sidebar with Components -->
        <ScrollViewer DockPanel.Dock="Left" Width="150" BorderThickness="2">
            <StackPanel Margin="5" Spacing="5">
                <TextBlock Text="Logic Gates" FontWeight="Bold" Margin="0,5"/>
                
                <Button Content="AND Gate" Command="{Binding AddComponentCommand}" CommandParameter="AND"/>
                <Button Content="OR Gate" Command="{Binding AddComponentCommand}" CommandParameter="OR"/>
                <Button Content="NOT Gate" Command="{Binding AddComponentCommand}" CommandParameter="NOT"/>
                <Button Content="NAND Gate" Command="{Binding AddComponentCommand}" CommandParameter="NAND"/>
                <Button Content="NOR Gate" Command="{Binding AddComponentCommand}" CommandParameter="NOR"/>
                <Button Content="XOR Gate" Command="{Binding AddComponentCommand}" CommandParameter="XOR"/>
                <Button Content="XNOR Gate" Command="{Binding AddComponentCommand}" CommandParameter="XNOR"/>
                
                <TextBlock Text="Input/Output" FontWeight="Bold" Margin="0,10,0,5"/>
                
                <Button Content="Toggle Switch" Command="{Binding AddComponentCommand}" CommandParameter="TOGGLE"/>
                <Button Content="Logic Probe" Command="{Binding AddComponentCommand}" CommandParameter="PROBE"/>
                
                <TextBlock Text="Other" FontWeight="Bold" Margin="0,10,0,5"/>
                
                <Button Content="Wire" Command="{Binding AddComponentCommand}" CommandParameter="WIRE"/>
            </StackPanel>
        </ScrollViewer>
        
        <!-- Bottom Status Bar -->
        <Border Background="DarkSlateGray" Height="25" DockPanel.Dock="Bottom" Padding="5">
            <Grid>
                <!-- Left-aligned items -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBlock Text="File Name: "/>
                    <TextBlock Text="{Binding OpenedFileName}" Margin="5,0"/>
                    <TextBlock Text="|" Margin="5,0"/>
                    <TextBlock Text="Cursor: "/>
                    <TextBlock Text="{Binding CursorPosition}" Margin="2,0"/>
                </StackPanel>

                <!-- Right-aligned item -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="Last Action: "/>
                    <TextBlock Text="{Binding LastAction}" Margin="2,0"/>
                </StackPanel>
            </Grid>
        </Border>


        <!-- Main Canvas Area -->
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Canvas x:Name="MainCanvas" Background="LightGray" MinWidth="2000" MinHeight="2000">
                <!-- Circuit elements will be added here programmatically -->
                
                <!-- <Line EndPoint="0,20" StartPoint="20,20" Stroke="Black"  StrokeThickness="3"/> -->
                
            </Canvas>
        </ScrollViewer>
    </DockPanel>
    
    
    
   

</Window>
